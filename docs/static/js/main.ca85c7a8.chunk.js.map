{"version":3,"sources":["component/AddCategory.js","helpers/getGifs.js","component/GifGridItem.js","component/GiftGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","protoTypes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GiftGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GiftExpertApp","categories","divRoot","document","getElementById","ReactDOM","render"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAchD,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAIhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAhBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,aAqB3BZ,EAAYe,WAAa,CACvBd,c,OAAee,EAAUC,KAAKC,Y,mCC7BnBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAKFI,MAAMF,GALJ,cAKfG,EALe,gBAMEA,EAAKC,OANP,uBAMbC,EANa,EAMbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXjB,kBAedM,GAfc,4CAAH,sDCEPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGvC,OAFAc,QAAQC,IAAIN,EAAIC,EAAOV,GAGrB,sBAAKgB,UAAU,OAAf,UACE,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCFGS,EAAW,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECHd,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SAAe,EAClBlB,mBAAS,CACjCyB,KAAM,GACNe,SAAS,IAHiC,mBACrCC,EADqC,KAC9BC,EAD8B,KAc5C,OARAC,qBAAU,WACR1B,EAAQC,GAAU0B,MAAK,SAACC,GACtBC,YAAW,WACTJ,EAAS,CAAEjB,KAAMoB,EAAML,SAAS,MAC/B,UAEJ,CAACtB,IAEGuB,EDLmBM,CAAa7B,GAA/BsB,EANgC,EAMhCA,QAASf,EANuB,EAMvBA,KAEjB,OACE,qCACE,6BAAKP,IACJsB,GAAW,2CACZ,qBAAKJ,UAAU,YAAf,SACGX,EAAKE,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEhBnBmB,EAAgB,WAAM,MAEGhD,mBAAS,CAAC,cAFb,mBAE1BiD,EAF0B,KAEdlD,EAFc,KAQjC,OACE,gCACE,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACGkD,EAAWtB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAyBA,SAAUA,GAApBA,YCfnBgC,G,MAAUC,SAASC,eAAe,SACxCC,IAASC,OAAO,cAAC,EAAD,IAAmBJ,K","file":"static/js/main.ca85c7a8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      ></input>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.protoTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=6lHQ7RxOIMLotWs6psvCtx5F9LffZj6S`;\r\n\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  console.log(id, title, url);\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n\r\n      {/* {img.title} */}\r\n    </div>\r\n  );\r\n};\r\n","// import React, { useEffect, useState } from \"react\";\r\n// import { getGifs } from \"../helpers/getGifs\";\r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nimport { GifGridItem } from \"./GifGridItem\";\r\nexport const GiftGrid = ({ category }) => {\r\n  //   const [images, setImages] = useState([]);\r\n  //   useEffect(() => {\r\n  //     getGifs(category).then((imgs) => setImages(imgs));\r\n  //   }, [category]);\r\n\r\n  const { loading, data } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      {loading && <p>Loading...</p>}\r\n      <div className=\"card-grid\">\r\n        {data.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n\r\n      {/* <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ({ category }) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setTimeout(() => {\r\n        setstate({ data: imgs, loading: false });\r\n      }, 3000);\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./component/AddCategory\";\r\nimport { GiftGrid } from \"./component/GiftGrid\";\r\n\r\nexport const GiftExpertApp = () => {\r\n  // const categories = [\"One Punch\", \"Samurai X\", \"Dragon Ball\"];\r\n  const [categories, setCategories] = useState([\"One Punch\"]);\r\n  // const handleAdd = () => {\r\n  //   setCategories([...categories, \"HunterXHunter\"]);\r\n  //   // setCategories((cats) => [...cats, \"Hunter\"]);\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <h2>GiftExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      {/* <button onClick={handleAdd}>Add</button> */}\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GiftGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GiftExpertApp } from \"./GiftExpertApp\";\nimport \"./index.css\";\n\nconst divRoot = document.getElementById(\"root\");\nReactDOM.render(<GiftExpertApp />, divRoot);\n"],"sourceRoot":""}